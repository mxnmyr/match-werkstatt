generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id            String   @id // Default entfernt, wird explizit gesetzt
  title         String
  description   String
  clientId      String
  clientName    String
  deadline      DateTime
  costCenter    String
  priority      String        @default("medium")
  status        String        @default("pending")
  estimatedHours Int
  actualHours   Int
  assignedTo    String?
  notes         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  orderType     String
  subTasks      Json?
  documents     Document[]
  revisionHistory  Json? // Kommentare von der Werkstatt an den Kunden
  reworkComments   Json? // Kommentare vom Kunden an die Werkstatt
  confirmationNote String?       @db.Text
  confirmationDate DateTime?
  canEdit          Boolean?      @default(false)
  noteHistory      NoteHistory[] // Relation zu NoteHistory
}

model Document {
  id         String   @id @default(uuid())
  name       String
  url        String
  uploadDate DateTime
  order      Order    @relation(fields: [orderId], references: [id])
  orderId    String
}

model User {
  id          String   @id @default(uuid())
  username    String   @unique
  password    String
  name        String
  role        String   // 'client', 'admin', 'workshop'
  isActive    Boolean  @default(true)
  isApproved  Boolean  @default(false)
  createdAt   DateTime @default(now())
}

model NoteHistory {
  id        Int      @id @default(autoincrement())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  notes     String
  createdAt DateTime @default(now())
}
